<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kosta.ems.benefit.BenefitMapper">
    <select id="selectBenefitTarget">
        select c.course_seq as courseSeq,
        c.manager_id as managerId,
        c.course_number as courseNumber,
        c.course_name as courseName,
        c.is_active as isActive,
        s.student_id as studentId,
        s.name,
        s.hrd_net_id as hrdNetId,
        s.bank,
        s.account
        from courses c
        LEFT JOIN students_courses sc ON c.course_seq = sc.course_seq
        LEFT JOIN students s ON s.student_id = sc.student_id
        WHERE c.academy_location = #{academyLocation}
        AND s.name LIKE CONCAT('%', #{name}, '%')
        AND course_start_date <![CDATA[<=]]> #{startDate}
        AND course_end_date <![CDATA[>=]]> #{endDate}
        AND c.is_active = true
        AND s.is_active = true
        AND c.course_number = #{courseNumber}
        ORDER BY name
        <if test="limit != null and offset != null">
            limit #{limit} offset #{offset}
        </if>

    </select>
    <insert id="insertBenefitSettlementDuration" useGeneratedKeys="true"
            parameterType="com.kosta.ems.benefit.dto.SettlementDurationDTO"
            keyProperty="settlementDurationSeq">
        insert into settlement_durations (settlement_duration_start_date,
                                          settlement_duration_end_date,
                                          course_seq,
                                          manager_id)
        values (#{settlementDurationStartDate}, #{settlementDurationEndDate}, #{courseSeq}, #{managerId})
    </insert>
    <insert id="insertBenefitSettlementAmount" parameterType="com.kosta.ems.benefit.dto.BenefitDTO">
        insert into benefits (amount,
                              student_id,
                              settlement_duration_seq,
                              benefits_categories_seq,
                              manager_id)
        values (#{amount}, #{studentId}, #{settlementDurationSeq}, #{benefitsCategoriesSeq}, #{managerId});
    </insert>

    <select id="countSettlementTarget" resultType="int">
        <![CDATA[
        select count(s.student_id) as countBenefitSettlement
        from courses c
                 LEFT JOIN students_courses sc ON c.course_seq = sc.course_seq
                 LEFT JOIN students s ON s.student_id = sc.student_id
        WHERE c.academy_location = #{academyLocation}
          AND s.name LIKE CONCAT('%', #{name}, '%')
          AND course_start_date <= #{startDate}
          AND course_end_date >= #{endDate}
          AND s.student_id != ''
          AND c.is_active = true
          AND s.is_active = true
          AND c.course_number = #{courseNumber}
        ]]>
    </select>

    <select id="countSettlementResult" resultType="int">
        select count(s.student_id) as countSettlementResult
        from benefits b
                 left join settlement_durations sd on b.settlement_duration_seq = sd.settlement_duration_seq
                 left join courses c on c.course_seq = sd.course_seq
                 left join students s on s.student_id = b.student_id
        WHERE c.academy_location = #{academyLocation}
          AND s.name LIKE CONCAT('%', #{name}, '%')
          AND (#{courseNumber} IS NULL OR #{courseNumber} = '' OR c.course_number = #{courseNumber})
          AND (#{benefitSettlementDate} IS NULL OR #{benefitSettlementDate} = '' OR
               benefit_settlement_date = #{benefitSettlementDate})
          AND c.is_active = true
          AND s.is_active = true
    </select>

    <select id="selectLastSettlementDate" parameterType="String">
        select max(settlement_duration_end_date) as settlementEndDate
        from settlement_durations
                 inner join courses on courses.course_seq = settlement_durations.course_seq
        where course_number = #{courseNumber};
    </select>

    <select id="selectDurationSeq" parameterType="int">
        select settlement_duration_seq as settlementDurationSeq
        from settlement_durations sd
                 inner join courses c on sd.course_seq = c.course_seq
        where sd.course_seq = #{courseSeq};
    </select>

    <select id="resultList">
        select c.course_seq                      as courseSeq,
               s.student_id                      as studentId,
               c.course_number                   as courseNumber,
               s.hrd_net_id                      as hrdNetId,
               s.name,
               s.bank,
               s.account,
               b.benefit_seq                     as benefitSeq,
               b.benefits_categories_seq         as benefitsCategoriesSeq,
               b.settlement_duration_seq         as settlementDurationSeq,
               sd.settlement_duration_start_date as settlementDurationStartDate,
               sd.settlement_duration_end_date   as settlementDurationEndDate,
               b.benefits_categories_seq         as benefitsCategoriesSeq,
               b.benefit_settlement_date         as benefitSettlementDate
        from benefits b
                 left join settlement_durations sd
                           on b.settlement_duration_seq = sd.settlement_duration_seq
                 left join courses c on c.course_seq = sd.course_seq
                 left join students s on s.student_id = b.student_id
        where s.name LIKE CONCAT('%'
            , #{name}
            , '%')
          AND (#{courseNumber} IS NULL
            OR #{courseNumber} = ''
            OR c.course_number = #{courseNumber})
          AND (#{benefitSettlementDate} IS NULL
            OR #{benefitSettlementDate} = ''
            OR
               benefit_settlement_date = #{benefitSettlementDate})
          AND c.academy_location = #{academyLocation}
          AND c.is_active = true
          AND s.is_active = true
        GROUP BY s.student_id, b.benefit_settlement_date, sd.settlement_duration_start_date, s.name
        ORDER BY b.benefit_settlement_date DESC,
                 sd.settlement_duration_start_date DESC,
                 s.name
    </select>

    <select id="getBefitAmount">
        select benefit_seq                as benefitSeq,
               amount,
               student_id                 as studentId,
               bc.benefits_categories_seq as benefitsCategoriesSeq
        from benefits b
                 inner join benefits_categories bc on b.benefits_categories_seq = bc.benefits_categories_seq
        where benefit_settlement_date = #{benefitSettlementDate}
          and b.is_active = true
    </select>

</mapper>