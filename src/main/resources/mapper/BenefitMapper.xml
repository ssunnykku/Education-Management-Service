<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kosta.ems.benefit.BenefitMapper">
    <select id="selectBenefitTarget" resultType="com.kosta.ems.benefit.BenefitTargetDTO">
        <![CDATA[
        select c.course_seq    as courseSeq,
               c.manager_id    as managerId,
               c.course_number as courseNumber,
               c.course_name   as courseName,
               c.is_active     as isActive,
               s.student_id    as studentId,
               s.name,
               s.hrd_net_id    as hrdNetId,
               s.bank,
               s.account
        from courses c
                 LEFT JOIN students_courses sc ON c.course_seq = sc.course_seq
                 LEFT JOIN students s ON s.student_id = sc.student_id
        WHERE c.academy_location = #{academyLocation}
          AND course_start_date <= #{startDate}
          and course_end_date >= #{endDate}
          AND s.student_id != ''
          AND c.is_active = 'T'
          AND s.is_active = 'T'
          AND c.course_number = #{courseNumber}
        ORDER BY name desc
        limit #{limit} offset #{offset};
        ]]>
    </select>
    <insert id="insertBenefitSettlementDuration" useGeneratedKeys="true"
            parameterType="com.kosta.ems.benefit.SettlementDurationDTO"
            keyProperty="settlementDurationSeq">
        insert into settlement_durations (settlement_duration_start_date, settlement_duration_end_date, course_seq,
                                          manager_id)
        values (#{settlementDurationStartDate}, #{settlementDurationEndDate}, #{courseSeq}, #{managerId})
    </insert>
    <insert id="insertBenefitSettlementAmount" parameterType="com.kosta.ems.benefit.BenefitDTO">
        insert into benefits (training_aid_amount, meal_aid_amount, settlement_aid_amount, student_id,
                              settlement_duration_seq)
        values (#{trainingAidAmount}, #{mealAidAmount}, #{settlementAidAmount}, #{studentId}, #{settlementDurationSeq})
    </insert>
    <select id="selectBenefitSettlementResult">
        select c.course_seq                                                    as courseSeq,
               s.student_id                                                    as studentId,
               c.course_number                                                 as courseNumber,
               s.hrd_net_id                                                    as hrdNetId,
               s.name,
               s.bank,
               s.account,
               benefit_seq                                                     as benefitSeq,
               training_aid_amount                                             as trainingAidAmount,
               meal_aid_amount                                                 as mealAidAmount,
               settlement_aid_amount                                           as settlementAidAmount,
               benefit_settlement_date                                         as benefitSettlementDate,
               sd.settlement_duration_seq                                      as settlementDurationSeq,
               settlement_duration_start_date                                  as settlementDurationStartDate,
               settlement_duration_end_date                                    as settlementDurationEndDate,
               c.manager_id                                                    as managerId,
               (training_aid_amount + meal_aid_amount + settlement_aid_amount) as totalAmount
        from benefits b
                 left join settlement_durations sd on b.settlement_duration_seq = sd.settlement_duration_seq
                 left join courses c on c.course_seq = sd.course_seq
                 left join students s on s.student_id = b.student_id
                 left join students_courses sc on s.student_id = sc.student_id
        where s.name LIKE CONCAT('%', #{name}, '%')
          and (#{courseNumber} IS NULL OR #{courseNumber} = '' OR c.course_number = #{courseNumber})
          and (#{benefitSettlementDate} IS NULL OR #{benefitSettlementDate} = '' OR
               benefit_settlement_date = #{benefitSettlementDate})
          AND c.is_active = 'T'
          AND s.is_active = 'T'
        ORDER BY s.name desc
        limit #{limit} offset #{offset}
    </select>
</mapper>