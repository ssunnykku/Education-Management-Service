<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kosta.ems.attendance.AttendanceMapper">
    <select id="selectAttendanceByStudentIdAndDuration"
            resultType="com.kosta.ems.attendance.AttendanceStudentCourseDTO">
        select attendance_date      as attendanceDate,
               a.student_course_seq as studentCourseSeq,
               attendance_status    as attendanceStatus,
               student_id           as studentId,
               course_seq           as courseSeq
        from attendances a
                 left join students_courses sc on a.student_course_seq = sc.student_course_seq
        where student_id = #{studentId}
          and attendance_date <![CDATA[>=]]> #{startDate}
          and attendance_date <![CDATA[<=]]> #{endDate}
    </select>

    <select id="selectCountAttendance" resultType="int">
        select count(attendance_date) as countAttencance
        from attendances a
                 left join students_courses sc on a.student_course_seq = sc.student_course_seq
        where attendance_date <![CDATA[>=]]> #{startDate}
          and attendance_date <![CDATA[<=]]> #{endDate}
          and student_id = #{studentId}
          and attendance_status = '출석';
    </select>
    <select id="selectCountLeave" resultType="int">
        select count(attendance_date) countLeave
        from attendances a
                 left join students_courses sc on a.student_course_seq = sc.student_course_seq
        where attendance_date <![CDATA[>=]]> #{startDate}
          and attendance_date <![CDATA[<=]]> #{endDate}
          and student_id = #{studentId}
          and attendance_status != '출석';
    </select>
    <!--수강생 출결 목록 데이터 개수-->
    <select id="selectStudentAttendanceListAmount" resultType="com.kosta.ems.attendance.StudentAttendanceListDTO">
    	SELECT hrd_net_id AS hrdNetId
FROM students_courses sc
JOIN students s ON s.student_id = sc.student_id
JOIN courses c ON sc.course_seq = c.course_seq
LEFT JOIN attendances a ON sc.student_course_seq = a.student_course_seq
WHERE (s.student_id IN (SELECT student_id FROM students WHERE NAME LIKE CONCAT('%', #{name}, '%')) OR c.course_seq = (SELECT course_seq FROM courses WHERE course_number = #{courseNumber}))
GROUP BY c.course_number, s.name, s.hrd_net_id, c.total_training_days
HAVING SUM(CASE WHEN a.attendance_status = '출석' THEN 1 ELSE 0 END) > 0;
    </select>
    <!--수강생 출결 목록 가져오기-->
    <select id="selectStudentAttendanceList" resultType="com.kosta.ems.attendance.StudentAttendanceListDTO">
    	SELECT c.course_number AS courseNumber, s.name, s.hrd_net_id AS hrdNetId, c.total_training_days AS totalTrainingDays,
    SUM(CASE WHEN a.attendance_status = '출석' THEN 1 ELSE 0 END) AS 'sumAttendance',
    SUM(CASE WHEN a.attendance_status = '지각' THEN 1 ELSE 0 END) AS 'sumLateness',
    SUM(CASE WHEN a.attendance_status = '조퇴' THEN 1 ELSE 0 END) AS 'sumGoOut',
    SUM(CASE WHEN a.attendance_status = '외출' THEN 1 ELSE 0 END) AS 'sumEarlyLeave',
    SUM(CASE WHEN a.attendance_status = '결석' THEN 1 ELSE 0 END) AS 'sumAbsence'
FROM students_courses sc
JOIN students s ON s.student_id = sc.student_id
JOIN courses c ON sc.course_seq = c.course_seq
LEFT JOIN attendances a ON sc.student_course_seq = a.student_course_seq
WHERE (s.student_id IN (SELECT student_id FROM students WHERE NAME LIKE CONCAT('%', #{name}, '%')) OR c.course_seq = (SELECT course_seq FROM courses WHERE course_number = #{courseNumber}))
GROUP BY c.course_number, s.name, s.hrd_net_id, c.total_training_days
HAVING SUM(CASE WHEN a.attendance_status = '출석' THEN 1 ELSE 0 END) > 0
LIMIT #{page}, #{size};
    </select>
    <!--수강생 출결 상태 수정-->
    <update id="updateStudentAttendance" parameterType="com.kosta.ems.attendance.UpdateStudentAttendanceStatusDTO">
    	UPDATE attendances
SET attendance_status=#{attendanceStatus}
WHERE attendance_date=#{attendanceDate} AND student_course_seq=(
        SELECT student_course_seq FROM students_courses WHERE student_id=#{studentId});
    </update>
</mapper>